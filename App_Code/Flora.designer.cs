#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.3053
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[System.Data.Linq.Mapping.DatabaseAttribute(Name="Flora")]
public partial class FloraDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertmembers(members instance);
  partial void Updatemembers(members instance);
  partial void Deletemembers(members instance);
  partial void Insertcities(cities instance);
  partial void Updatecities(cities instance);
  partial void Deletecities(cities instance);
  partial void Insertflower(flower instance);
  partial void Updateflower(flower instance);
  partial void Deleteflower(flower instance);
  partial void Inserttree(tree instance);
  partial void Updatetree(tree instance);
  partial void Deletetree(tree instance);
  #endregion
	
	public FloraDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["FloraConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public FloraDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public FloraDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public FloraDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public FloraDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<members> members
	{
		get
		{
			return this.GetTable<members>();
		}
	}
	
	public System.Data.Linq.Table<cities> cities
	{
		get
		{
			return this.GetTable<cities>();
		}
	}
	
	public System.Data.Linq.Table<flower> flower
	{
		get
		{
			return this.GetTable<flower>();
		}
	}
	
	public System.Data.Linq.Table<tree> tree
	{
		get
		{
			return this.GetTable<tree>();
		}
	}
}

[Table(Name="dbo.members")]
public partial class members : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _member;
	
	private string _power;
	
	private string _email;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberChanging(string value);
    partial void OnmemberChanged();
    partial void OnpowerChanging(string value);
    partial void OnpowerChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    #endregion
	
	public members()
	{
		OnCreated();
	}
	
	[Column(Storage="_member", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string member
	{
		get
		{
			return this._member;
		}
		set
		{
			if ((this._member != value))
			{
				this.OnmemberChanging(value);
				this.SendPropertyChanging();
				this._member = value;
				this.SendPropertyChanged("member");
				this.OnmemberChanged();
			}
		}
	}
	
	[Column(Storage="_power", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string power
	{
		get
		{
			return this._power;
		}
		set
		{
			if ((this._power != value))
			{
				this.OnpowerChanging(value);
				this.SendPropertyChanging();
				this._power = value;
				this.SendPropertyChanged("power");
				this.OnpowerChanged();
			}
		}
	}
	
	[Column(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string email
	{
		get
		{
			return this._email;
		}
		set
		{
			if ((this._email != value))
			{
				this.OnemailChanging(value);
				this.SendPropertyChanging();
				this._email = value;
				this.SendPropertyChanged("email");
				this.OnemailChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.cities")]
public partial class cities : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _c_id;
	
	private string _c_name;
	
	private string _region;
	
	private System.Nullable<short> _city_elevation;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onc_idChanging(int value);
    partial void Onc_idChanged();
    partial void Onc_nameChanging(string value);
    partial void Onc_nameChanged();
    partial void OnregionChanging(string value);
    partial void OnregionChanged();
    partial void Oncity_elevationChanging(System.Nullable<short> value);
    partial void Oncity_elevationChanged();
    #endregion
	
	public cities()
	{
		OnCreated();
	}
	
	[Column(Storage="_c_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int c_id
	{
		get
		{
			return this._c_id;
		}
		set
		{
			if ((this._c_id != value))
			{
				this.Onc_idChanging(value);
				this.SendPropertyChanging();
				this._c_id = value;
				this.SendPropertyChanged("c_id");
				this.Onc_idChanged();
			}
		}
	}
	
	[Column(Storage="_c_name", DbType="NVarChar(30) NOT NULL", CanBeNull=false)]
	public string c_name
	{
		get
		{
			return this._c_name;
		}
		set
		{
			if ((this._c_name != value))
			{
				this.Onc_nameChanging(value);
				this.SendPropertyChanging();
				this._c_name = value;
				this.SendPropertyChanged("c_name");
				this.Onc_nameChanged();
			}
		}
	}
	
	[Column(Storage="_region", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
	public string region
	{
		get
		{
			return this._region;
		}
		set
		{
			if ((this._region != value))
			{
				this.OnregionChanging(value);
				this.SendPropertyChanging();
				this._region = value;
				this.SendPropertyChanged("region");
				this.OnregionChanged();
			}
		}
	}
	
	[Column(Storage="_city_elevation", DbType="SmallInt")]
	public System.Nullable<short> city_elevation
	{
		get
		{
			return this._city_elevation;
		}
		set
		{
			if ((this._city_elevation != value))
			{
				this.Oncity_elevationChanging(value);
				this.SendPropertyChanging();
				this._city_elevation = value;
				this.SendPropertyChanged("city_elevation");
				this.Oncity_elevationChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.flower")]
public partial class flower : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _p_id;
	
	private string _type;
	
	private string _l_species;
	
	private string _family;
	
	private string _genus;
	
	private string _species;
	
	private string _regions;
	
	private string _cities;
	
	private short _max_high;
	
	private string _growth_type;
	
	private string _width;
	
	private string _ornamental_type;
	
	private string _leaf_color;
	
	private string _fw_color;
	
	private string _florescence;
	
	private string _fragrance;
	
	private string _fu_color;
	
	private string _fu_period;
	
	private string _water;
	
	private string _velocity;
	
	private short _water_depth;
	
	private string _light;
	
	private string _soil;
	
	private string _cold;
	
	private string _res;
	
	private string _application;
	
	private string _remark;
	
	private string _pic1;
	
	private string _pic2;
	
	private string _pic3;
	
	private string _pic4;
	
	private string _pic5;
	
	private string _pic6;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onl_speciesChanging(string value);
    partial void Onl_speciesChanged();
    partial void OnfamilyChanging(string value);
    partial void OnfamilyChanged();
    partial void OngenusChanging(string value);
    partial void OngenusChanged();
    partial void OnspeciesChanging(string value);
    partial void OnspeciesChanged();
    partial void OnregionsChanging(string value);
    partial void OnregionsChanged();
    partial void OncitiesChanging(string value);
    partial void OncitiesChanged();
    partial void Onmax_highChanging(short value);
    partial void Onmax_highChanged();
    partial void Ongrowth_typeChanging(string value);
    partial void Ongrowth_typeChanged();
    partial void OnwidthChanging(string value);
    partial void OnwidthChanged();
    partial void Onornamental_typeChanging(string value);
    partial void Onornamental_typeChanged();
    partial void Onleaf_colorChanging(string value);
    partial void Onleaf_colorChanged();
    partial void Onfw_colorChanging(string value);
    partial void Onfw_colorChanged();
    partial void OnflorescenceChanging(string value);
    partial void OnflorescenceChanged();
    partial void OnfragranceChanging(string value);
    partial void OnfragranceChanged();
    partial void Onfu_colorChanging(string value);
    partial void Onfu_colorChanged();
    partial void Onfu_periodChanging(string value);
    partial void Onfu_periodChanged();
    partial void OnwaterChanging(string value);
    partial void OnwaterChanged();
    partial void OnvelocityChanging(string value);
    partial void OnvelocityChanged();
    partial void Onwater_depthChanging(short value);
    partial void Onwater_depthChanged();
    partial void OnlightChanging(string value);
    partial void OnlightChanged();
    partial void OnsoilChanging(string value);
    partial void OnsoilChanged();
    partial void OncoldChanging(string value);
    partial void OncoldChanged();
    partial void OnresChanging(string value);
    partial void OnresChanged();
    partial void OnapplicationChanging(string value);
    partial void OnapplicationChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onpic1Changing(string value);
    partial void Onpic1Changed();
    partial void Onpic2Changing(string value);
    partial void Onpic2Changed();
    partial void Onpic3Changing(string value);
    partial void Onpic3Changed();
    partial void Onpic4Changing(string value);
    partial void Onpic4Changed();
    partial void Onpic5Changing(string value);
    partial void Onpic5Changed();
    partial void Onpic6Changing(string value);
    partial void Onpic6Changed();
    #endregion
	
	public flower()
	{
		OnCreated();
	}
	
	[Column(Storage="_p_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int p_id
	{
		get
		{
			return this._p_id;
		}
		set
		{
			if ((this._p_id != value))
			{
				this.Onp_idChanging(value);
				this.SendPropertyChanging();
				this._p_id = value;
				this.SendPropertyChanged("p_id");
				this.Onp_idChanged();
			}
		}
	}
	
	[Column(Storage="_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string type
	{
		get
		{
			return this._type;
		}
		set
		{
			if ((this._type != value))
			{
				this.OntypeChanging(value);
				this.SendPropertyChanging();
				this._type = value;
				this.SendPropertyChanged("type");
				this.OntypeChanged();
			}
		}
	}
	
	[Column(Storage="_l_species", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string l_species
	{
		get
		{
			return this._l_species;
		}
		set
		{
			if ((this._l_species != value))
			{
				this.Onl_speciesChanging(value);
				this.SendPropertyChanging();
				this._l_species = value;
				this.SendPropertyChanged("l_species");
				this.Onl_speciesChanged();
			}
		}
	}
	
	[Column(Storage="_family", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string family
	{
		get
		{
			return this._family;
		}
		set
		{
			if ((this._family != value))
			{
				this.OnfamilyChanging(value);
				this.SendPropertyChanging();
				this._family = value;
				this.SendPropertyChanged("family");
				this.OnfamilyChanged();
			}
		}
	}
	
	[Column(Storage="_genus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string genus
	{
		get
		{
			return this._genus;
		}
		set
		{
			if ((this._genus != value))
			{
				this.OngenusChanging(value);
				this.SendPropertyChanging();
				this._genus = value;
				this.SendPropertyChanged("genus");
				this.OngenusChanged();
			}
		}
	}
	
	[Column(Storage="_species", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string species
	{
		get
		{
			return this._species;
		}
		set
		{
			if ((this._species != value))
			{
				this.OnspeciesChanging(value);
				this.SendPropertyChanging();
				this._species = value;
				this.SendPropertyChanged("species");
				this.OnspeciesChanged();
			}
		}
	}
	
	[Column(Storage="_regions", DbType="VarChar(180) NOT NULL", CanBeNull=false)]
	public string regions
	{
		get
		{
			return this._regions;
		}
		set
		{
			if ((this._regions != value))
			{
				this.OnregionsChanging(value);
				this.SendPropertyChanging();
				this._regions = value;
				this.SendPropertyChanged("regions");
				this.OnregionsChanged();
			}
		}
	}
	
	[Column(Storage="_cities", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string cities
	{
		get
		{
			return this._cities;
		}
		set
		{
			if ((this._cities != value))
			{
				this.OncitiesChanging(value);
				this.SendPropertyChanging();
				this._cities = value;
				this.SendPropertyChanged("cities");
				this.OncitiesChanged();
			}
		}
	}
	
	[Column(Storage="_max_high", DbType="SmallInt NOT NULL")]
	public short max_high
	{
		get
		{
			return this._max_high;
		}
		set
		{
			if ((this._max_high != value))
			{
				this.Onmax_highChanging(value);
				this.SendPropertyChanging();
				this._max_high = value;
				this.SendPropertyChanged("max_high");
				this.Onmax_highChanged();
			}
		}
	}
	
	[Column(Storage="_growth_type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string growth_type
	{
		get
		{
			return this._growth_type;
		}
		set
		{
			if ((this._growth_type != value))
			{
				this.Ongrowth_typeChanging(value);
				this.SendPropertyChanging();
				this._growth_type = value;
				this.SendPropertyChanged("growth_type");
				this.Ongrowth_typeChanged();
			}
		}
	}
	
	[Column(Storage="_width", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string width
	{
		get
		{
			return this._width;
		}
		set
		{
			if ((this._width != value))
			{
				this.OnwidthChanging(value);
				this.SendPropertyChanging();
				this._width = value;
				this.SendPropertyChanged("width");
				this.OnwidthChanged();
			}
		}
	}
	
	[Column(Storage="_ornamental_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string ornamental_type
	{
		get
		{
			return this._ornamental_type;
		}
		set
		{
			if ((this._ornamental_type != value))
			{
				this.Onornamental_typeChanging(value);
				this.SendPropertyChanging();
				this._ornamental_type = value;
				this.SendPropertyChanged("ornamental_type");
				this.Onornamental_typeChanged();
			}
		}
	}
	
	[Column(Storage="_leaf_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string leaf_color
	{
		get
		{
			return this._leaf_color;
		}
		set
		{
			if ((this._leaf_color != value))
			{
				this.Onleaf_colorChanging(value);
				this.SendPropertyChanging();
				this._leaf_color = value;
				this.SendPropertyChanged("leaf_color");
				this.Onleaf_colorChanged();
			}
		}
	}
	
	[Column(Storage="_fw_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fw_color
	{
		get
		{
			return this._fw_color;
		}
		set
		{
			if ((this._fw_color != value))
			{
				this.Onfw_colorChanging(value);
				this.SendPropertyChanging();
				this._fw_color = value;
				this.SendPropertyChanged("fw_color");
				this.Onfw_colorChanged();
			}
		}
	}
	
	[Column(Storage="_florescence", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string florescence
	{
		get
		{
			return this._florescence;
		}
		set
		{
			if ((this._florescence != value))
			{
				this.OnflorescenceChanging(value);
				this.SendPropertyChanging();
				this._florescence = value;
				this.SendPropertyChanged("florescence");
				this.OnflorescenceChanged();
			}
		}
	}
	
	[Column(Storage="_fragrance", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fragrance
	{
		get
		{
			return this._fragrance;
		}
		set
		{
			if ((this._fragrance != value))
			{
				this.OnfragranceChanging(value);
				this.SendPropertyChanging();
				this._fragrance = value;
				this.SendPropertyChanged("fragrance");
				this.OnfragranceChanged();
			}
		}
	}
	
	[Column(Storage="_fu_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fu_color
	{
		get
		{
			return this._fu_color;
		}
		set
		{
			if ((this._fu_color != value))
			{
				this.Onfu_colorChanging(value);
				this.SendPropertyChanging();
				this._fu_color = value;
				this.SendPropertyChanged("fu_color");
				this.Onfu_colorChanged();
			}
		}
	}
	
	[Column(Storage="_fu_period", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string fu_period
	{
		get
		{
			return this._fu_period;
		}
		set
		{
			if ((this._fu_period != value))
			{
				this.Onfu_periodChanging(value);
				this.SendPropertyChanging();
				this._fu_period = value;
				this.SendPropertyChanged("fu_period");
				this.Onfu_periodChanged();
			}
		}
	}
	
	[Column(Storage="_water", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string water
	{
		get
		{
			return this._water;
		}
		set
		{
			if ((this._water != value))
			{
				this.OnwaterChanging(value);
				this.SendPropertyChanging();
				this._water = value;
				this.SendPropertyChanged("water");
				this.OnwaterChanged();
			}
		}
	}
	
	[Column(Storage="_velocity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string velocity
	{
		get
		{
			return this._velocity;
		}
		set
		{
			if ((this._velocity != value))
			{
				this.OnvelocityChanging(value);
				this.SendPropertyChanging();
				this._velocity = value;
				this.SendPropertyChanged("velocity");
				this.OnvelocityChanged();
			}
		}
	}
	
	[Column(Storage="_water_depth", DbType="SmallInt NOT NULL")]
	public short water_depth
	{
		get
		{
			return this._water_depth;
		}
		set
		{
			if ((this._water_depth != value))
			{
				this.Onwater_depthChanging(value);
				this.SendPropertyChanging();
				this._water_depth = value;
				this.SendPropertyChanged("water_depth");
				this.Onwater_depthChanged();
			}
		}
	}
	
	[Column(Storage="_light", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string light
	{
		get
		{
			return this._light;
		}
		set
		{
			if ((this._light != value))
			{
				this.OnlightChanging(value);
				this.SendPropertyChanging();
				this._light = value;
				this.SendPropertyChanged("light");
				this.OnlightChanged();
			}
		}
	}
	
	[Column(Storage="_soil", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string soil
	{
		get
		{
			return this._soil;
		}
		set
		{
			if ((this._soil != value))
			{
				this.OnsoilChanging(value);
				this.SendPropertyChanging();
				this._soil = value;
				this.SendPropertyChanged("soil");
				this.OnsoilChanged();
			}
		}
	}
	
	[Column(Storage="_cold", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string cold
	{
		get
		{
			return this._cold;
		}
		set
		{
			if ((this._cold != value))
			{
				this.OncoldChanging(value);
				this.SendPropertyChanging();
				this._cold = value;
				this.SendPropertyChanged("cold");
				this.OncoldChanged();
			}
		}
	}
	
	[Column(Storage="_res", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string res
	{
		get
		{
			return this._res;
		}
		set
		{
			if ((this._res != value))
			{
				this.OnresChanging(value);
				this.SendPropertyChanging();
				this._res = value;
				this.SendPropertyChanged("res");
				this.OnresChanged();
			}
		}
	}
	
	[Column(Storage="_application", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string application
	{
		get
		{
			return this._application;
		}
		set
		{
			if ((this._application != value))
			{
				this.OnapplicationChanging(value);
				this.SendPropertyChanging();
				this._application = value;
				this.SendPropertyChanged("application");
				this.OnapplicationChanged();
			}
		}
	}
	
	[Column(Storage="_remark", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string remark
	{
		get
		{
			return this._remark;
		}
		set
		{
			if ((this._remark != value))
			{
				this.OnremarkChanging(value);
				this.SendPropertyChanging();
				this._remark = value;
				this.SendPropertyChanged("remark");
				this.OnremarkChanged();
			}
		}
	}
	
	[Column(Storage="_pic1", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic1
	{
		get
		{
			return this._pic1;
		}
		set
		{
			if ((this._pic1 != value))
			{
				this.Onpic1Changing(value);
				this.SendPropertyChanging();
				this._pic1 = value;
				this.SendPropertyChanged("pic1");
				this.Onpic1Changed();
			}
		}
	}
	
	[Column(Storage="_pic2", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic2
	{
		get
		{
			return this._pic2;
		}
		set
		{
			if ((this._pic2 != value))
			{
				this.Onpic2Changing(value);
				this.SendPropertyChanging();
				this._pic2 = value;
				this.SendPropertyChanged("pic2");
				this.Onpic2Changed();
			}
		}
	}
	
	[Column(Storage="_pic3", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic3
	{
		get
		{
			return this._pic3;
		}
		set
		{
			if ((this._pic3 != value))
			{
				this.Onpic3Changing(value);
				this.SendPropertyChanging();
				this._pic3 = value;
				this.SendPropertyChanged("pic3");
				this.Onpic3Changed();
			}
		}
	}
	
	[Column(Storage="_pic4", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic4
	{
		get
		{
			return this._pic4;
		}
		set
		{
			if ((this._pic4 != value))
			{
				this.Onpic4Changing(value);
				this.SendPropertyChanging();
				this._pic4 = value;
				this.SendPropertyChanged("pic4");
				this.Onpic4Changed();
			}
		}
	}
	
	[Column(Storage="_pic5", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic5
	{
		get
		{
			return this._pic5;
		}
		set
		{
			if ((this._pic5 != value))
			{
				this.Onpic5Changing(value);
				this.SendPropertyChanging();
				this._pic5 = value;
				this.SendPropertyChanged("pic5");
				this.Onpic5Changed();
			}
		}
	}
	
	[Column(Storage="_pic6", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic6
	{
		get
		{
			return this._pic6;
		}
		set
		{
			if ((this._pic6 != value))
			{
				this.Onpic6Changing(value);
				this.SendPropertyChanging();
				this._pic6 = value;
				this.SendPropertyChanged("pic6");
				this.Onpic6Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[Table(Name="dbo.tree")]
public partial class tree : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _p_id;
	
	private string _type;
	
	private string _l_species;
	
	private string _family;
	
	private string _genus;
	
	private string _species;
	
	private string _regions;
	
	private string _cities;
	
	private short _max_high;
	
	private string _growth_type;
	
	private string _life_habit;
	
	private int _age;
	
	private string _growing_race;
	
	private string _width;
	
	private string _tree_form;
	
	private string _leaf_ornamental;
	
	private string _leaf_color;
	
	private string _flower_sense;
	
	private string _fw_type;
	
	private string _fw_color;
	
	private string _florescence;
	
	private string _fragrance;
	
	private bool _is_fu_ornamental;
	
	private string _fu_color;
	
	private string _fu_period;
	
	private string _brh_ornamental;
	
	private string _brh_color;
	
	private string _water;
	
	private string _light;
	
	private string _soil;
	
	private string _cold;
	
	private string _protective;
	
	private string _res;
	
	private string _application;
	
	private string _remark;
	
	private string _pic1;
	
	private string _pic2;
	
	private string _pic3;
	
	private string _pic4;
	
	private string _pic5;
	
	private string _pic6;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onp_idChanging(int value);
    partial void Onp_idChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void Onl_speciesChanging(string value);
    partial void Onl_speciesChanged();
    partial void OnfamilyChanging(string value);
    partial void OnfamilyChanged();
    partial void OngenusChanging(string value);
    partial void OngenusChanged();
    partial void OnspeciesChanging(string value);
    partial void OnspeciesChanged();
    partial void OnregionsChanging(string value);
    partial void OnregionsChanged();
    partial void OncitiesChanging(string value);
    partial void OncitiesChanged();
    partial void Onmax_highChanging(short value);
    partial void Onmax_highChanged();
    partial void Ongrowth_typeChanging(string value);
    partial void Ongrowth_typeChanged();
    partial void Onlife_habitChanging(string value);
    partial void Onlife_habitChanged();
    partial void OnageChanging(int value);
    partial void OnageChanged();
    partial void Ongrowing_raceChanging(string value);
    partial void Ongrowing_raceChanged();
    partial void OnwidthChanging(string value);
    partial void OnwidthChanged();
    partial void Ontree_formChanging(string value);
    partial void Ontree_formChanged();
    partial void Onleaf_ornamentalChanging(string value);
    partial void Onleaf_ornamentalChanged();
    partial void Onleaf_colorChanging(string value);
    partial void Onleaf_colorChanged();
    partial void Onflower_senseChanging(string value);
    partial void Onflower_senseChanged();
    partial void Onfw_typeChanging(string value);
    partial void Onfw_typeChanged();
    partial void Onfw_colorChanging(string value);
    partial void Onfw_colorChanged();
    partial void OnflorescenceChanging(string value);
    partial void OnflorescenceChanged();
    partial void OnfragranceChanging(string value);
    partial void OnfragranceChanged();
    partial void Onis_fu_ornamentalChanging(bool value);
    partial void Onis_fu_ornamentalChanged();
    partial void Onfu_colorChanging(string value);
    partial void Onfu_colorChanged();
    partial void Onfu_periodChanging(string value);
    partial void Onfu_periodChanged();
    partial void Onbrh_ornamentalChanging(string value);
    partial void Onbrh_ornamentalChanged();
    partial void Onbrh_colorChanging(string value);
    partial void Onbrh_colorChanged();
    partial void OnwaterChanging(string value);
    partial void OnwaterChanged();
    partial void OnlightChanging(string value);
    partial void OnlightChanged();
    partial void OnsoilChanging(string value);
    partial void OnsoilChanged();
    partial void OncoldChanging(string value);
    partial void OncoldChanged();
    partial void OnprotectiveChanging(string value);
    partial void OnprotectiveChanged();
    partial void OnresChanging(string value);
    partial void OnresChanged();
    partial void OnapplicationChanging(string value);
    partial void OnapplicationChanged();
    partial void OnremarkChanging(string value);
    partial void OnremarkChanged();
    partial void Onpic1Changing(string value);
    partial void Onpic1Changed();
    partial void Onpic2Changing(string value);
    partial void Onpic2Changed();
    partial void Onpic3Changing(string value);
    partial void Onpic3Changed();
    partial void Onpic4Changing(string value);
    partial void Onpic4Changed();
    partial void Onpic5Changing(string value);
    partial void Onpic5Changed();
    partial void Onpic6Changing(string value);
    partial void Onpic6Changed();
    #endregion
	
	public tree()
	{
		OnCreated();
	}
	
	[Column(Storage="_p_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int p_id
	{
		get
		{
			return this._p_id;
		}
		set
		{
			if ((this._p_id != value))
			{
				this.Onp_idChanging(value);
				this.SendPropertyChanging();
				this._p_id = value;
				this.SendPropertyChanged("p_id");
				this.Onp_idChanged();
			}
		}
	}
	
	[Column(Storage="_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string type
	{
		get
		{
			return this._type;
		}
		set
		{
			if ((this._type != value))
			{
				this.OntypeChanging(value);
				this.SendPropertyChanging();
				this._type = value;
				this.SendPropertyChanged("type");
				this.OntypeChanged();
			}
		}
	}
	
	[Column(Storage="_l_species", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string l_species
	{
		get
		{
			return this._l_species;
		}
		set
		{
			if ((this._l_species != value))
			{
				this.Onl_speciesChanging(value);
				this.SendPropertyChanging();
				this._l_species = value;
				this.SendPropertyChanged("l_species");
				this.Onl_speciesChanged();
			}
		}
	}
	
	[Column(Storage="_family", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string family
	{
		get
		{
			return this._family;
		}
		set
		{
			if ((this._family != value))
			{
				this.OnfamilyChanging(value);
				this.SendPropertyChanging();
				this._family = value;
				this.SendPropertyChanged("family");
				this.OnfamilyChanged();
			}
		}
	}
	
	[Column(Storage="_genus", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string genus
	{
		get
		{
			return this._genus;
		}
		set
		{
			if ((this._genus != value))
			{
				this.OngenusChanging(value);
				this.SendPropertyChanging();
				this._genus = value;
				this.SendPropertyChanged("genus");
				this.OngenusChanged();
			}
		}
	}
	
	[Column(Storage="_species", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string species
	{
		get
		{
			return this._species;
		}
		set
		{
			if ((this._species != value))
			{
				this.OnspeciesChanging(value);
				this.SendPropertyChanging();
				this._species = value;
				this.SendPropertyChanged("species");
				this.OnspeciesChanged();
			}
		}
	}
	
	[Column(Storage="_regions", DbType="VarChar(180) NOT NULL", CanBeNull=false)]
	public string regions
	{
		get
		{
			return this._regions;
		}
		set
		{
			if ((this._regions != value))
			{
				this.OnregionsChanging(value);
				this.SendPropertyChanging();
				this._regions = value;
				this.SendPropertyChanged("regions");
				this.OnregionsChanged();
			}
		}
	}
	
	[Column(Storage="_cities", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string cities
	{
		get
		{
			return this._cities;
		}
		set
		{
			if ((this._cities != value))
			{
				this.OncitiesChanging(value);
				this.SendPropertyChanging();
				this._cities = value;
				this.SendPropertyChanged("cities");
				this.OncitiesChanged();
			}
		}
	}
	
	[Column(Storage="_max_high", DbType="SmallInt NOT NULL")]
	public short max_high
	{
		get
		{
			return this._max_high;
		}
		set
		{
			if ((this._max_high != value))
			{
				this.Onmax_highChanging(value);
				this.SendPropertyChanging();
				this._max_high = value;
				this.SendPropertyChanged("max_high");
				this.Onmax_highChanged();
			}
		}
	}
	
	[Column(Storage="_growth_type", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string growth_type
	{
		get
		{
			return this._growth_type;
		}
		set
		{
			if ((this._growth_type != value))
			{
				this.Ongrowth_typeChanging(value);
				this.SendPropertyChanging();
				this._growth_type = value;
				this.SendPropertyChanged("growth_type");
				this.Ongrowth_typeChanged();
			}
		}
	}
	
	[Column(Storage="_life_habit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string life_habit
	{
		get
		{
			return this._life_habit;
		}
		set
		{
			if ((this._life_habit != value))
			{
				this.Onlife_habitChanging(value);
				this.SendPropertyChanging();
				this._life_habit = value;
				this.SendPropertyChanged("life_habit");
				this.Onlife_habitChanged();
			}
		}
	}
	
	[Column(Storage="_age", DbType="Int NOT NULL")]
	public int age
	{
		get
		{
			return this._age;
		}
		set
		{
			if ((this._age != value))
			{
				this.OnageChanging(value);
				this.SendPropertyChanging();
				this._age = value;
				this.SendPropertyChanged("age");
				this.OnageChanged();
			}
		}
	}
	
	[Column(Storage="_growing_race", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string growing_race
	{
		get
		{
			return this._growing_race;
		}
		set
		{
			if ((this._growing_race != value))
			{
				this.Ongrowing_raceChanging(value);
				this.SendPropertyChanging();
				this._growing_race = value;
				this.SendPropertyChanged("growing_race");
				this.Ongrowing_raceChanged();
			}
		}
	}
	
	[Column(Storage="_width", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string width
	{
		get
		{
			return this._width;
		}
		set
		{
			if ((this._width != value))
			{
				this.OnwidthChanging(value);
				this.SendPropertyChanging();
				this._width = value;
				this.SendPropertyChanged("width");
				this.OnwidthChanged();
			}
		}
	}
	
	[Column(Storage="_tree_form", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string tree_form
	{
		get
		{
			return this._tree_form;
		}
		set
		{
			if ((this._tree_form != value))
			{
				this.Ontree_formChanging(value);
				this.SendPropertyChanging();
				this._tree_form = value;
				this.SendPropertyChanged("tree_form");
				this.Ontree_formChanged();
			}
		}
	}
	
	[Column(Storage="_leaf_ornamental", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string leaf_ornamental
	{
		get
		{
			return this._leaf_ornamental;
		}
		set
		{
			if ((this._leaf_ornamental != value))
			{
				this.Onleaf_ornamentalChanging(value);
				this.SendPropertyChanging();
				this._leaf_ornamental = value;
				this.SendPropertyChanged("leaf_ornamental");
				this.Onleaf_ornamentalChanged();
			}
		}
	}
	
	[Column(Storage="_leaf_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string leaf_color
	{
		get
		{
			return this._leaf_color;
		}
		set
		{
			if ((this._leaf_color != value))
			{
				this.Onleaf_colorChanging(value);
				this.SendPropertyChanging();
				this._leaf_color = value;
				this.SendPropertyChanged("leaf_color");
				this.Onleaf_colorChanged();
			}
		}
	}
	
	[Column(Storage="_flower_sense", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string flower_sense
	{
		get
		{
			return this._flower_sense;
		}
		set
		{
			if ((this._flower_sense != value))
			{
				this.Onflower_senseChanging(value);
				this.SendPropertyChanging();
				this._flower_sense = value;
				this.SendPropertyChanged("flower_sense");
				this.Onflower_senseChanged();
			}
		}
	}
	
	[Column(Storage="_fw_type", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fw_type
	{
		get
		{
			return this._fw_type;
		}
		set
		{
			if ((this._fw_type != value))
			{
				this.Onfw_typeChanging(value);
				this.SendPropertyChanging();
				this._fw_type = value;
				this.SendPropertyChanged("fw_type");
				this.Onfw_typeChanged();
			}
		}
	}
	
	[Column(Storage="_fw_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fw_color
	{
		get
		{
			return this._fw_color;
		}
		set
		{
			if ((this._fw_color != value))
			{
				this.Onfw_colorChanging(value);
				this.SendPropertyChanging();
				this._fw_color = value;
				this.SendPropertyChanged("fw_color");
				this.Onfw_colorChanged();
			}
		}
	}
	
	[Column(Storage="_florescence", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string florescence
	{
		get
		{
			return this._florescence;
		}
		set
		{
			if ((this._florescence != value))
			{
				this.OnflorescenceChanging(value);
				this.SendPropertyChanging();
				this._florescence = value;
				this.SendPropertyChanged("florescence");
				this.OnflorescenceChanged();
			}
		}
	}
	
	[Column(Storage="_fragrance", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fragrance
	{
		get
		{
			return this._fragrance;
		}
		set
		{
			if ((this._fragrance != value))
			{
				this.OnfragranceChanging(value);
				this.SendPropertyChanging();
				this._fragrance = value;
				this.SendPropertyChanged("fragrance");
				this.OnfragranceChanged();
			}
		}
	}
	
	[Column(Storage="_is_fu_ornamental", DbType="Bit NOT NULL")]
	public bool is_fu_ornamental
	{
		get
		{
			return this._is_fu_ornamental;
		}
		set
		{
			if ((this._is_fu_ornamental != value))
			{
				this.Onis_fu_ornamentalChanging(value);
				this.SendPropertyChanging();
				this._is_fu_ornamental = value;
				this.SendPropertyChanged("is_fu_ornamental");
				this.Onis_fu_ornamentalChanged();
			}
		}
	}
	
	[Column(Storage="_fu_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string fu_color
	{
		get
		{
			return this._fu_color;
		}
		set
		{
			if ((this._fu_color != value))
			{
				this.Onfu_colorChanging(value);
				this.SendPropertyChanging();
				this._fu_color = value;
				this.SendPropertyChanged("fu_color");
				this.Onfu_colorChanged();
			}
		}
	}
	
	[Column(Storage="_fu_period", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
	public string fu_period
	{
		get
		{
			return this._fu_period;
		}
		set
		{
			if ((this._fu_period != value))
			{
				this.Onfu_periodChanging(value);
				this.SendPropertyChanging();
				this._fu_period = value;
				this.SendPropertyChanged("fu_period");
				this.Onfu_periodChanged();
			}
		}
	}
	
	[Column(Storage="_brh_ornamental", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string brh_ornamental
	{
		get
		{
			return this._brh_ornamental;
		}
		set
		{
			if ((this._brh_ornamental != value))
			{
				this.Onbrh_ornamentalChanging(value);
				this.SendPropertyChanging();
				this._brh_ornamental = value;
				this.SendPropertyChanged("brh_ornamental");
				this.Onbrh_ornamentalChanged();
			}
		}
	}
	
	[Column(Storage="_brh_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string brh_color
	{
		get
		{
			return this._brh_color;
		}
		set
		{
			if ((this._brh_color != value))
			{
				this.Onbrh_colorChanging(value);
				this.SendPropertyChanging();
				this._brh_color = value;
				this.SendPropertyChanged("brh_color");
				this.Onbrh_colorChanged();
			}
		}
	}
	
	[Column(Storage="_water", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string water
	{
		get
		{
			return this._water;
		}
		set
		{
			if ((this._water != value))
			{
				this.OnwaterChanging(value);
				this.SendPropertyChanging();
				this._water = value;
				this.SendPropertyChanged("water");
				this.OnwaterChanged();
			}
		}
	}
	
	[Column(Storage="_light", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string light
	{
		get
		{
			return this._light;
		}
		set
		{
			if ((this._light != value))
			{
				this.OnlightChanging(value);
				this.SendPropertyChanging();
				this._light = value;
				this.SendPropertyChanged("light");
				this.OnlightChanged();
			}
		}
	}
	
	[Column(Storage="_soil", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string soil
	{
		get
		{
			return this._soil;
		}
		set
		{
			if ((this._soil != value))
			{
				this.OnsoilChanging(value);
				this.SendPropertyChanging();
				this._soil = value;
				this.SendPropertyChanged("soil");
				this.OnsoilChanged();
			}
		}
	}
	
	[Column(Storage="_cold", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string cold
	{
		get
		{
			return this._cold;
		}
		set
		{
			if ((this._cold != value))
			{
				this.OncoldChanging(value);
				this.SendPropertyChanging();
				this._cold = value;
				this.SendPropertyChanged("cold");
				this.OncoldChanged();
			}
		}
	}
	
	[Column(Storage="_protective", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string protective
	{
		get
		{
			return this._protective;
		}
		set
		{
			if ((this._protective != value))
			{
				this.OnprotectiveChanging(value);
				this.SendPropertyChanging();
				this._protective = value;
				this.SendPropertyChanged("protective");
				this.OnprotectiveChanged();
			}
		}
	}
	
	[Column(Storage="_res", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string res
	{
		get
		{
			return this._res;
		}
		set
		{
			if ((this._res != value))
			{
				this.OnresChanging(value);
				this.SendPropertyChanging();
				this._res = value;
				this.SendPropertyChanged("res");
				this.OnresChanged();
			}
		}
	}
	
	[Column(Storage="_application", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string application
	{
		get
		{
			return this._application;
		}
		set
		{
			if ((this._application != value))
			{
				this.OnapplicationChanging(value);
				this.SendPropertyChanging();
				this._application = value;
				this.SendPropertyChanged("application");
				this.OnapplicationChanged();
			}
		}
	}
	
	[Column(Storage="_remark", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
	public string remark
	{
		get
		{
			return this._remark;
		}
		set
		{
			if ((this._remark != value))
			{
				this.OnremarkChanging(value);
				this.SendPropertyChanging();
				this._remark = value;
				this.SendPropertyChanged("remark");
				this.OnremarkChanged();
			}
		}
	}
	
	[Column(Storage="_pic1", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic1
	{
		get
		{
			return this._pic1;
		}
		set
		{
			if ((this._pic1 != value))
			{
				this.Onpic1Changing(value);
				this.SendPropertyChanging();
				this._pic1 = value;
				this.SendPropertyChanged("pic1");
				this.Onpic1Changed();
			}
		}
	}
	
	[Column(Storage="_pic2", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic2
	{
		get
		{
			return this._pic2;
		}
		set
		{
			if ((this._pic2 != value))
			{
				this.Onpic2Changing(value);
				this.SendPropertyChanging();
				this._pic2 = value;
				this.SendPropertyChanged("pic2");
				this.Onpic2Changed();
			}
		}
	}
	
	[Column(Storage="_pic3", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic3
	{
		get
		{
			return this._pic3;
		}
		set
		{
			if ((this._pic3 != value))
			{
				this.Onpic3Changing(value);
				this.SendPropertyChanging();
				this._pic3 = value;
				this.SendPropertyChanged("pic3");
				this.Onpic3Changed();
			}
		}
	}
	
	[Column(Storage="_pic4", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic4
	{
		get
		{
			return this._pic4;
		}
		set
		{
			if ((this._pic4 != value))
			{
				this.Onpic4Changing(value);
				this.SendPropertyChanging();
				this._pic4 = value;
				this.SendPropertyChanged("pic4");
				this.Onpic4Changed();
			}
		}
	}
	
	[Column(Storage="_pic5", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic5
	{
		get
		{
			return this._pic5;
		}
		set
		{
			if ((this._pic5 != value))
			{
				this.Onpic5Changing(value);
				this.SendPropertyChanging();
				this._pic5 = value;
				this.SendPropertyChanged("pic5");
				this.Onpic5Changed();
			}
		}
	}
	
	[Column(Storage="_pic6", DbType="NVarChar(300) NOT NULL", CanBeNull=false)]
	public string pic6
	{
		get
		{
			return this._pic6;
		}
		set
		{
			if ((this._pic6 != value))
			{
				this.Onpic6Changing(value);
				this.SendPropertyChanging();
				this._pic6 = value;
				this.SendPropertyChanged("pic6");
				this.Onpic6Changed();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
